const userData = {
	USD: 1000,
	EUR: 900,
	UAH: 15000,
	BIF: 20000,
	AOA: 100
};

const bankData = {
    USD: {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    EUR: {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    UAH: {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    GBP: {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
}
         

const keys = Object.keys(userData);
const keysBank = Object.keys(bankData);

function checkBalance() {
  let balance = prompt(`–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É, –∑–∞ —è–∫–æ—é –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –±–∞–ª–∞–Ω—Å. –î–æ—Å—Ç—É–ø–Ω—ñ: (${Object.keys(userData).join(', ')})`).toUpperCase();
  while(!keys.includes(balance)){
    balance = prompt(`–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É, –∑–∞ —è–∫–æ—é –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ –±–∞–ª–∞–Ω—Å. –î–æ—Å—Ç—É–ø–Ω—ñ: (${Object.keys(userData).join(', ')})`).toUpperCase();
  }
  if (keys.includes(balance)) {
    console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData[balance]} ${balance}`);
  } 
}

function WithdrawMoney() {
  let currency;
  do {
    currency = prompt(`–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É. –£ –í–∞—Å –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ (${Object.keys(userData).join(', ')}). –í –±–∞–Ω–∫—É –Ω–∞—è–≤–Ω—ñ –≤–∞–ª—é—Ç–∏ (USD, EUR, GBP)`).toUpperCase();
  } while (!keys.includes(currency) || !keysBank.includes(currency) || bankData[currency].max === 0);
  maxAmount = Math.min(userData[currency], bankData[currency].max);
  minAmount = bankData[currency].min;
  amount = Number(prompt(`–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É (${minAmount}-${maxAmount} ${currency}):`));
  if (!isNaN(amount)) {
    if (amount > maxAmount) {
      console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${maxAmount} ${currency}`);
    } else if (amount < minAmount) {
      console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${minAmount} ${currency}`);
    } else {
      userData[currency] -= amount;
      console.log(`–û—Ç –í–∞—à—ñ –≥—Ä–æ—à—ñ ${amount} ${currency} ${bankData[currency].img}`);
    }
  } else {
    console.log("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è");
  }
}
  
function getMoney() {
  return new Promise((resolve, reject) => {
    const answer = confirm("–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ?");
    if (answer) {
      resolve();
    } else {
      reject('–í—ñ–¥–º—ñ–Ω–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –±–∞–ª–∞–Ω—Å—É');
    }    
  })
} 

let NewPromise = getMoney();

NewPromise
  .then(
    () => checkBalance(), 
    () => WithdrawMoney()
  )
  .catch((err) => console.log(err))
  .finally(() => console.log('–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä'))